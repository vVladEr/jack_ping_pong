class Ball{
    field int x, y, speed;
    field Vector2 direction;
    static int radius = 3;

    constructor Ball new()
    {
        let x = 127;
        let y = 255;
        let direction = Vector.new(-1,1);
        let speed = 1;
        return this;
    }

    method int getX() 
    {
        return x;
    }

    method int getY()
    {
        return y;
    }

    method int getRadius()
    {
        return radius;
    }

    method Vector2 getDirection(){
        return direction;
    }

    method void changeDirection(Vector2 a)
    {
        let direction = Vector2.sumVectors(a, direction);
        return;
    }

    method void moveY()
    {
        if (direction.getY() < 0){
            if (-direction.getY() > y - radius){
                let y = - direction.getY() - y + radius;
                do direction.reflectY();
            }
        }
        else{
            if(direction.getY() > 511 - y - radius){
                let y = 1022 - direction.getY() - y - radius; 
                do direction.reflectY();
            }
            else{
                let y = y + direction.getY();
            }
        }
        return;
    }

    method void moveX()
    {
        let x = x + direction.getX();
        return;
    }

    method void hitBat(Bat bat, char dirKey)
    {
        do direction.reflectX();
        var Vector2 hit;
        if (x < bat.getXLT()){
            let x = 2 * bat.getXLT() + direction.getX() + radius - x;
            let hit = Vector2.new(-1,0);
        }
        else{
            let x = 2 * bat.getXRB() + direction.getX() + radius - x;
            let hit = Vector2.new(1,0);
        }
        var Vector2 dir;
        let dir = Vector2.new(0,0);
        if (dirKey = 131){
            let dir = Vector2.new(0,-1);
        }
        else{
            if (dirKey = 133){
                let dir = Vector2.new(0,1);
            }
        }
        var Vector2 temp;
        let temp = Vector2.sumVectors(hit, dir);
        let direction = Vector2.sumVectors(direction, temp);
    }

    method void moveV()
    {
        let x = x + (direction.getX * speed);
        let y = y + (direction.getY * speed);
        return;
    }

    method void increaseSpeed()
    {
        let speed = speed + 1;
        return;
    }

    method void draw()
    {
        do Screen.setColor(true);
        do Screen.drawCircle(X, Y, radius);
        return;
    }

    method void erase()
    {
        do Screen.setColor(false);
        do Screen.drawCircle(X, Y, radius);
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}